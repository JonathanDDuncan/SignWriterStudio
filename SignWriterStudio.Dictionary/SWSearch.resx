<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="$this.Sign" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEBTV0NsYXNzZXMsIFZlcnNpb249MS4wLjAuMCwgQ3VsdHVyZT1u
        ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsDAMAAABRU3lzdGVtLkRyYXdpbmcsIFZlcnNpb249NC4w
        LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iMDNmNWY3ZjExZDUwYTNhDAQAAACa
        AW1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
        Yjc3YTVjNTYxOTM0ZTA4OV1dLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRy
        YWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkMBQAAAIQBU1dDbGFzc2VzLCBWZXJzaW9u
        PTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dLCBTV0NsYXNzZXMs
        IFZlcnNpb249MS4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1udWxsBQEAAAAh
        U2lnbldyaXRlclN0dWRpby5TV0NsYXNzZXMuU3dTaWduFgAAAAhfYmtDb2xvchBfc2lnbkxhbmd1YWdl
        SXNvDF9sYW5ndWFnZUlzbwZfZ2xvc3MIX2dsb3NzZXMNX3NpZ25QdWRkbGVJZA9fc2lnbldyaXRlckd1
        aWQSX2N1cnJlbnRGcmFtZUluZGV4B19mcmFtZXMEX3RhZw9fc1dyaXRpbmdTb3VyY2UIX2NyZWF0ZWQN
        X2xhc3RNb2RpZmllZA9fc2lnblB1ZGRsZVVzZXILX3B1ZGRsZVByZXYLX3B1ZGRsZU5leHQKX3B1ZGRs
        ZVBuZwpfcHVkZGxlU3ZnEF9wdWRkbGVWaWRlb0xpbmsKX0lzUHJpdmF0ZQtfUHVkZGxlVGV4dA5fZGlz
        cG9zZWRWYWx1ZQQBAQEBAQQABAIBAAABAQEBAQEABAAUU3lzdGVtLkRyYXdpbmcuQ29sb3IDAAAAHlN5
        c3RlbS5OdWxsYWJsZWAxW1tTeXN0ZW0uR3VpZAQAAAAITVNpZ25Xcml0ZXJTdHVkaW8uU1dDbGFzc2Vz
        LlN3Q29sbGVjdGlvbmAxW1tTaWduV3JpdGVyU3R1ZGlvLlNXQ2xhc3Nlcy5TV0ZyYW1lBQAAAA0NATBT
        eXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW1N5c3RlbS5TdHJpbmcEAAAAAQIAAAAF+v//
        /xRTeXN0ZW0uRHJhd2luZy5Db2xvcgQAAAAEbmFtZQV2YWx1ZQprbm93bkNvbG9yBXN0YXRlAQAAAAkH
        BwMAAAAKAAAAAAAAAAAbAAEACgoKCgoKAAAAAAkHAAAACQgAAAAKAAAAAAAAAAAAAAAAAAAAAAoKCgoK
        CgAJCQAAAAAMCgAAAI8BU1dDbGFzc2VzLCBWZXJzaW9uPTEuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
        UHVibGljS2V5VG9rZW49bnVsbF1dLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
        dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFBwAAAE1TaWduV3JpdGVyU3R1ZGlv
        LlNXQ2xhc3Nlcy5Td0NvbGxlY3Rpb25gMVtbU2lnbldyaXRlclN0dWRpby5TV0NsYXNzZXMuU1dGcmFt
        ZQEAAAASQ29sbGVjdGlvbmAxK2l0ZW1zBEVTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFb
        W1NpZ25Xcml0ZXJTdHVkaW8uU1dDbGFzc2VzLlNXRnJhbWUKAAAABQAAAAkLAAAABAgAAAANU3lzdGVt
        Lk9iamVjdAAAAAAFCQAAADBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW1N5c3RlbS5T
        dHJpbmcDAAAABl9pdGVtcwVfc2l6ZQhfdmVyc2lvbgYAAAgIBAAAAAkMAAAAAAAAAAAAAAAFCwAAAEVT
        eXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW1NpZ25Xcml0ZXJTdHVkaW8uU1dDbGFzc2Vz
        LlNXRnJhbWUDAAAABl9pdGVtcwVfc2l6ZQhfdmVyc2lvbgQAACRTaWduV3JpdGVyU3R1ZGlvLlNXQ2xh
        c3Nlcy5TV0ZyYW1lW10CAAAACAgKAAAACQ0AAAABAAAAAQAAABEMAAAAAAAAAAcNAAAAAAEAAAAEAAAA
        BCJTaWduV3JpdGVyU3R1ZGlvLlNXQ2xhc3Nlcy5TV0ZyYW1lAgAAAAkOAAAADQMFDgAAACJTaWduV3Jp
        dGVyU3R1ZGlvLlNXQ2xhc3Nlcy5TV0ZyYW1lDAAAAAdfZnJhbWVaCl9taW5IZWlnaHQJX21pbldpZHRo
        Cl9jcm9wUG9pbnQUX3NlbGVjdGVkU3ltYm9sQ291bnQJX2NvbXBhcmVaFF9jb21wYXJlU1dTaWduU3lt
        Ym9sEl9jb21wYXJlU1dTZXF1ZW5jZQdfbXlHdWlkDF9zaWduU3ltYm9scwpfc2VxdWVuY2VzDl9kaXNw
        b3NlZFZhbHVlAAAABAAABAQDBAQACAgIFFN5c3RlbS5EcmF3aW5nLlBvaW50AwAAAAgIJ1NpZ25Xcml0
        ZXJTdHVkaW8uU1dDbGFzc2VzLlNXU2lnblN5bWJvbAIAAAAlU2lnbldyaXRlclN0dWRpby5TV0NsYXNz
        ZXMuU1dTZXF1ZW5jZQIAAAALU3lzdGVtLkd1aWRSU2lnbldyaXRlclN0dWRpby5TV0NsYXNzZXMuU3dD
        b2xsZWN0aW9uYDFbW1NpZ25Xcml0ZXJTdHVkaW8uU1dDbGFzc2VzLlNXU2lnblN5bWJvbAUAAABQU2ln
        bldyaXRlclN0dWRpby5TV0NsYXNzZXMuU3dDb2xsZWN0aW9uYDFbW1NpZ25Xcml0ZXJTdHVkaW8uU1dD
        bGFzc2VzLlNXU2VxdWVuY2UFAAAAAQIAAAAAAAAAAAAAAAAAAAAF8f///xRTeXN0ZW0uRHJhd2luZy5Q
        b2ludAIAAAABeAF5AAAICAMAAAAAAAAAAAAAAAAAAAAAAAAACgoE8P///wtTeXN0ZW0uR3VpZAsAAAAC
        X2ECX2ICX2MCX2QCX2UCX2YCX2cCX2gCX2kCX2oCX2sAAAAAAAAAAAAAAAgHBwICAgICAgICw03V+iYb
        aUaiGQr3LU1DVwkRAAAACRIAAAAABREAAABSU2lnbldyaXRlclN0dWRpby5TV0NsYXNzZXMuU3dDb2xs
        ZWN0aW9uYDFbW1NpZ25Xcml0ZXJTdHVkaW8uU1dDbGFzc2VzLlNXU2lnblN5bWJvbAEAAAASQ29sbGVj
        dGlvbmAxK2l0ZW1zBEpTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW1NpZ25Xcml0ZXJT
        dHVkaW8uU1dDbGFzc2VzLlNXU2lnblN5bWJvbAoAAAAFAAAACRMAAAAFEgAAAFBTaWduV3JpdGVyU3R1
        ZGlvLlNXQ2xhc3Nlcy5Td0NvbGxlY3Rpb25gMVtbU2lnbldyaXRlclN0dWRpby5TV0NsYXNzZXMuU1dT
        ZXF1ZW5jZQEAAAASQ29sbGVjdGlvbmAxK2l0ZW1zBEhTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5M
        aXN0YDFbW1NpZ25Xcml0ZXJTdHVkaW8uU1dDbGFzc2VzLlNXU2VxdWVuY2UKAAAABQAAAAkUAAAABRMA
        AABKU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tTaWduV3JpdGVyU3R1ZGlvLlNXQ2xh
        c3Nlcy5TV1NpZ25TeW1ib2wDAAAABl9pdGVtcwVfc2l6ZQhfdmVyc2lvbgQAAClTaWduV3JpdGVyU3R1
        ZGlvLlNXQ2xhc3Nlcy5TV1NpZ25TeW1ib2xbXQIAAAAICAoAAAAJFQAAAAAAAAAAAAAABRQAAABIU3lz
        dGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuTGlzdGAxW1tTaWduV3JpdGVyU3R1ZGlvLlNXQ2xhc3Nlcy5T
        V1NlcXVlbmNlAwAAAAZfaXRlbXMFX3NpemUIX3ZlcnNpb24EAAAnU2lnbldyaXRlclN0dWRpby5TV0Ns
        YXNzZXMuU1dTZXF1ZW5jZVtdAgAAAAgICgAAAAkWAAAAAAAAAAAAAAAHFQAAAAABAAAAAAAAAAQnU2ln
        bldyaXRlclN0dWRpby5TV0NsYXNzZXMuU1dTaWduU3ltYm9sAgAAAAcWAAAAAAEAAAAAAAAABCVTaWdu
        V3JpdGVyU3R1ZGlvLlNXQ2xhc3Nlcy5TV1NlcXVlbmNlAgAAAAs=
</value>
  </data>
</root>